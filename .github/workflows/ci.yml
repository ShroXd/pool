name: pool

on:
  push:
    branches:
      - master

jobs:

  test:
    name: Test

    strategy:
      matrix:
        go-version: [ 1.19 ]
#       platform: [ ubuntu-latest, macos-latest, windows-latest ]
        platform: [ ubuntu-latest, macos-latest ]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run tests
        run: go test -cover -tags test -race -timeout 30s ./...

  release:
    name: Release

    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/pool:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/pool:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/pool:buildcache,mode=max

  deploy:
    name: Deploy

    runs-on: ubuntu-latest
    needs: release

    steps:
      - uses: actions/checkout@v2

      - name: Clean Up Docker Container & Image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            docker stop dockerdev && docker rm dockerdev
            docker stop dockerdev-db && docker rm dockerdev-db
            docker rmi atriiy/pool

      - name: Docker-compose Remote Deployment
        uses: alex-ac/github-action-ssh-docker-compose@master
        with:
          ssh_host: ${{ secrets.SERVER_HOST }}
          ssh_user: ${{ secrets.SERVER_USERNAME }}
          ssh_private_key: ${{ secrets.SERVER_PRIVATE_KEY }}
          docker_compose_filename: docker-compose.prod.yml
